@page "/posts"
@page "/posts/list"
@page "/posts/list/{pageNumber:int}"
@inject IBlogService Service
@inject NavigationManager NavigationManager

<div class="d-flex flex-row">
    <h1>Posts</h1>
</div>

@if (Data == null)
{
    <Loader></Loader>
}
else
{
    <PagingWaterfall Data="@Data" Column="1" OnUpdatePage="@OnUpdatePage" OnNextPage="@OnNextPage" OnPreviousPage="@OnPreviousPage" OnPageTo="@OnPageTo">
        <ItemTemplate>
            <PostCard PostId="@context"></PostCard>
        </ItemTemplate>
    </PagingWaterfall>
}

@code {
    const int CountPerPage = 10;

    QueryResponse<string> Data { get; set; }

    [Parameter]
    public int? PageNumber { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        Data = await Service.PostService.Query(new PostQueryRequest
        {
            Paging = new Pagination
            {
                PageNumber = PageNumber ?? 0,
                CountPerPage = CountPerPage
            }
        });
    }

    private Task OnPageTo(int pageNumber)
    {
        NavigationManager.NavigateTo($"posts/list/{pageNumber}");
        return Task.CompletedTask;
    }

    private async Task OnUpdatePage()
    {
        Data = await Service.PostService.Query(new PostQueryRequest
        {
            Paging = Data.CurrentPage
        });
    }

    private Task OnPreviousPage()
    {
        return OnPageTo(Data.CurrentPage.PageNumber - 1);
    }

    private Task OnNextPage()
    {
        return OnPageTo(Data.CurrentPage.PageNumber + 1);
    }
}

@page "/keywords/{id}"
@page "/keywords/{id}/{pageNumber:int}"
@inherits BaseKeywordPage
@inject AcBlog.SDK.Filters.PostKeywordFilter Keywords

<div class="container">
    <div class="d-flex flex-row">
        <h1>Keyword: @Keyword?.Name</h1>
    </div>

    <Loader OnLoad="@OnLoad" @ref="loader">
        <PagingWaterfall Data="@Data" Column="1" OnUpdatePage="@OnUpdatePage" OnNextPage="@OnNextPage" OnPreviousPage="@OnPreviousPage" OnPageTo="@OnPageTo">
            <ItemTemplate>
                <PostCard PostId="@context" ShowType="true"></PostCard>
            </ItemTemplate>
        </PagingWaterfall>
    </Loader>
</div>

@code {
    const int CountPerPage = 10;

    QueryResponse<string> Data { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public int? PageNumber { get; set; } = null;

    private Keyword Keyword;

    private Loader loader;

    private async Task OnLoad()
    {
        Title = "Loading...";
        Keyword = await Service.KeywordService.Get(Id);
        Data = await Keywords.Filter(Id, new Pagination
        {
            PageNumber = PageNumber ?? 0,
            CountPerPage = CountPerPage
        });
        Title = $"Page {Data.CurrentPage.PageNumber + 1}";
    }

    private async Task OnPageTo(int pageNumber)
    {
        PageNumber = pageNumber;
        NavigationManager.NavigateTo($"keywords/{Id}/{PageNumber}");
        await OnUpdatePage();
    }

    private async Task OnUpdatePage()
    {
        await loader.Load();
    }

    private Task OnPreviousPage()
    {
        return OnPageTo(Data.CurrentPage.PageNumber - 1);
    }

    private Task OnNextPage()
    {
        return OnPageTo(Data.CurrentPage.PageNumber + 1);
    }
}
